#!/bin/bash

NETWORK_NAME=$1

if [ -z "$NETWORK_NAME" ]; then
  echo "Error: network name not provided. Usage: ./update-addresses.sh [network_name]"
  exit 1
fi

# Use jq to filter the entries in the network object of the networks.json file
# that have keys that start with "Linguo_"
# Then for each of those entries, construct a string in the format of:
# "export const [key] = "[value.address]";"
jq_filter=".$NETWORK_NAME | to_entries[] | select(.key | startswith(\"Linguo_\")) | 
\"export const \" + .key + \" = \\\"\" + .value.address + \"\\\"\""

# Extract the addresses from the networks.json file
addresses=$(jq -r "$jq_filter" networks.json)

# Add a warning message at the top of the file
warning="/*\n * This file is automatically generated. DO NOT modify it manually.\n *\n * network: $NETWORK_NAME\n */\n\n" > config/addresses.ts

# Append semicolons to each line of the addresses
addresses=$(echo "$addresses" | sed "s/$/;/")

# Write the addresses and warning message to the config/addresses.ts file
echo "$warning$addresses" > config/addresses.ts